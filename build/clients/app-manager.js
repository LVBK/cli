'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.installExtension = installExtension;
exports.updateExtension = updateExtension;
exports.uninstallExtension = uninstallExtension;
exports.getExtInstallations = getExtInstallations;
exports.createApp = createApp;
exports.getApplicationPlatform = getApplicationPlatform;
exports.getInstallations = getInstallations;
exports.getInstallation = getInstallation;

var _urijs = require('urijs');

var _urijs2 = _interopRequireDefault(_urijs);

var _jsonApiClient = require('./json-api-client');

var jsonApi = _interopRequireWildcard(_jsonApiClient);

var _services = require('../../config/services');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const appManagerUri = new _urijs2.default(_services.appManager);

async function installExtension(appId, extensionId) {
  const url = appManagerUri.clone().segment(`/v1/apps/${appId}/installations`);
  return await jsonApi.post(url, {
    data: {
      type: 'shoutem.core.installations',
      attributes: { extension: extensionId }
    }
  });
}

async function updateExtension(appId, installationId, extensionId) {
  const url = appManagerUri.clone().segment(`/v1/apps/${appId}/installations/${installationId}`);
  return await jsonApi.patch(url, {
    data: {
      type: 'shoutem.core.installations',
      attributes: { extension: extensionId }
    }
  });
}

async function uninstallExtension(appId, extensionId) {
  const uri = appManagerUri.clone().segment(`/v1/apps/${appId}/installations/${extensionId}`);
  return jsonApi.del(uri);
}

async function getExtInstallations(appId) {
  const uri = appManagerUri.clone().segment(`/v1/apps/${appId}/installations`);
  return await jsonApi.get(uri);
}

async function createApp(app) {
  const url = appManagerUri.clone().segment('/v1/apps/base/actions/clone');
  return await jsonApi.post(url, {
    data: {
      type: 'shoutem.core.application-clones',
      attributes: app
    }
  });
}

async function getApplicationPlatform(appId) {
  const url = appManagerUri.clone().segment(`/v1/apps/${appId}/platform`);
  return await jsonApi.get(url);
}

async function getInstallations(appId) {
  const url = appManagerUri.clone().segment(`/v1/apps/${appId}/installations`);
  return await jsonApi.get(url);
}

async function getInstallation(appId, canonical) {
  const url = appManagerUri.clone().segment(`/v1/apps/${appId}/installations/${canonical}`);
  return await jsonApi.get(url);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGllbnRzL2FwcC1tYW5hZ2VyLmpzIl0sIm5hbWVzIjpbImluc3RhbGxFeHRlbnNpb24iLCJ1cGRhdGVFeHRlbnNpb24iLCJ1bmluc3RhbGxFeHRlbnNpb24iLCJnZXRFeHRJbnN0YWxsYXRpb25zIiwiY3JlYXRlQXBwIiwiZ2V0QXBwbGljYXRpb25QbGF0Zm9ybSIsImdldEluc3RhbGxhdGlvbnMiLCJnZXRJbnN0YWxsYXRpb24iLCJqc29uQXBpIiwiYXBwTWFuYWdlclVyaSIsIlVSSSIsImFwcE1hbmFnZXIiLCJhcHBJZCIsImV4dGVuc2lvbklkIiwidXJsIiwiY2xvbmUiLCJzZWdtZW50IiwicG9zdCIsImRhdGEiLCJ0eXBlIiwiYXR0cmlidXRlcyIsImV4dGVuc2lvbiIsImluc3RhbGxhdGlvbklkIiwicGF0Y2giLCJ1cmkiLCJkZWwiLCJnZXQiLCJhcHAiLCJjYW5vbmljYWwiXSwibWFwcGluZ3MiOiI7Ozs7O1FBTXNCQSxnQixHQUFBQSxnQjtRQVVBQyxlLEdBQUFBLGU7UUFVQUMsa0IsR0FBQUEsa0I7UUFLQUMsbUIsR0FBQUEsbUI7UUFLQUMsUyxHQUFBQSxTO1FBVUFDLHNCLEdBQUFBLHNCO1FBS0FDLGdCLEdBQUFBLGdCO1FBS0FDLGUsR0FBQUEsZTs7QUF4RHRCOzs7O0FBQ0E7O0lBQVlDLE87O0FBQ1o7Ozs7OztBQUVBLE1BQU1DLGdCQUFnQixJQUFJQyxlQUFKLENBQVFDLG9CQUFSLENBQXRCOztBQUVPLGVBQWVYLGdCQUFmLENBQWdDWSxLQUFoQyxFQUF1Q0MsV0FBdkMsRUFBb0Q7QUFDekQsUUFBTUMsTUFBTUwsY0FBY00sS0FBZCxHQUFzQkMsT0FBdEIsQ0FBK0IsWUFBV0osS0FBTSxnQkFBaEQsQ0FBWjtBQUNBLFNBQU8sTUFBTUosUUFBUVMsSUFBUixDQUFhSCxHQUFiLEVBQWtCO0FBQzdCSSxVQUFNO0FBQ0pDLFlBQU0sNEJBREY7QUFFSkMsa0JBQVksRUFBRUMsV0FBV1IsV0FBYjtBQUZSO0FBRHVCLEdBQWxCLENBQWI7QUFNRDs7QUFFTSxlQUFlWixlQUFmLENBQStCVyxLQUEvQixFQUFzQ1UsY0FBdEMsRUFBc0RULFdBQXRELEVBQW1FO0FBQ3hFLFFBQU1DLE1BQU1MLGNBQWNNLEtBQWQsR0FBc0JDLE9BQXRCLENBQStCLFlBQVdKLEtBQU0sa0JBQWlCVSxjQUFlLEVBQWhGLENBQVo7QUFDQSxTQUFPLE1BQU1kLFFBQVFlLEtBQVIsQ0FBY1QsR0FBZCxFQUFtQjtBQUM5QkksVUFBTTtBQUNKQyxZQUFNLDRCQURGO0FBRUpDLGtCQUFZLEVBQUVDLFdBQVdSLFdBQWI7QUFGUjtBQUR3QixHQUFuQixDQUFiO0FBTUQ7O0FBRU0sZUFBZVgsa0JBQWYsQ0FBa0NVLEtBQWxDLEVBQXlDQyxXQUF6QyxFQUFzRDtBQUMzRCxRQUFNVyxNQUFNZixjQUFjTSxLQUFkLEdBQXNCQyxPQUF0QixDQUErQixZQUFXSixLQUFNLGtCQUFpQkMsV0FBWSxFQUE3RSxDQUFaO0FBQ0EsU0FBT0wsUUFBUWlCLEdBQVIsQ0FBWUQsR0FBWixDQUFQO0FBQ0Q7O0FBRU0sZUFBZXJCLG1CQUFmLENBQW1DUyxLQUFuQyxFQUEwQztBQUMvQyxRQUFNWSxNQUFNZixjQUFjTSxLQUFkLEdBQXNCQyxPQUF0QixDQUErQixZQUFXSixLQUFNLGdCQUFoRCxDQUFaO0FBQ0EsU0FBTyxNQUFNSixRQUFRa0IsR0FBUixDQUFZRixHQUFaLENBQWI7QUFDRDs7QUFFTSxlQUFlcEIsU0FBZixDQUF5QnVCLEdBQXpCLEVBQThCO0FBQ25DLFFBQU1iLE1BQU1MLGNBQWNNLEtBQWQsR0FBc0JDLE9BQXRCLENBQThCLDZCQUE5QixDQUFaO0FBQ0EsU0FBTyxNQUFNUixRQUFRUyxJQUFSLENBQWFILEdBQWIsRUFBa0I7QUFDN0JJLFVBQU07QUFDSkMsWUFBTSxpQ0FERjtBQUVKQyxrQkFBWU87QUFGUjtBQUR1QixHQUFsQixDQUFiO0FBTUQ7O0FBRU0sZUFBZXRCLHNCQUFmLENBQXNDTyxLQUF0QyxFQUE2QztBQUNsRCxRQUFNRSxNQUFNTCxjQUFjTSxLQUFkLEdBQXNCQyxPQUF0QixDQUErQixZQUFXSixLQUFNLFdBQWhELENBQVo7QUFDQSxTQUFPLE1BQU1KLFFBQVFrQixHQUFSLENBQVlaLEdBQVosQ0FBYjtBQUNEOztBQUVNLGVBQWVSLGdCQUFmLENBQWdDTSxLQUFoQyxFQUF1QztBQUM1QyxRQUFNRSxNQUFNTCxjQUFjTSxLQUFkLEdBQXNCQyxPQUF0QixDQUErQixZQUFXSixLQUFNLGdCQUFoRCxDQUFaO0FBQ0EsU0FBTyxNQUFNSixRQUFRa0IsR0FBUixDQUFZWixHQUFaLENBQWI7QUFDRDs7QUFFTSxlQUFlUCxlQUFmLENBQStCSyxLQUEvQixFQUFzQ2dCLFNBQXRDLEVBQWlEO0FBQ3RELFFBQU1kLE1BQU1MLGNBQWNNLEtBQWQsR0FBc0JDLE9BQXRCLENBQStCLFlBQVdKLEtBQU0sa0JBQWlCZ0IsU0FBVSxFQUEzRSxDQUFaO0FBQ0EsU0FBTyxNQUFNcEIsUUFBUWtCLEdBQVIsQ0FBWVosR0FBWixDQUFiO0FBQ0QiLCJmaWxlIjoiYXBwLW1hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVVJJIGZyb20gJ3VyaWpzJztcclxuaW1wb3J0ICogYXMganNvbkFwaSBmcm9tICcuL2pzb24tYXBpLWNsaWVudCc7XHJcbmltcG9ydCB7IGFwcE1hbmFnZXIgfSBmcm9tICcuLi8uLi9jb25maWcvc2VydmljZXMnO1xyXG5cclxuY29uc3QgYXBwTWFuYWdlclVyaSA9IG5ldyBVUkkoYXBwTWFuYWdlcik7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5zdGFsbEV4dGVuc2lvbihhcHBJZCwgZXh0ZW5zaW9uSWQpIHtcclxuICBjb25zdCB1cmwgPSBhcHBNYW5hZ2VyVXJpLmNsb25lKCkuc2VnbWVudChgL3YxL2FwcHMvJHthcHBJZH0vaW5zdGFsbGF0aW9uc2ApO1xyXG4gIHJldHVybiBhd2FpdCBqc29uQXBpLnBvc3QodXJsLCB7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgIHR5cGU6ICdzaG91dGVtLmNvcmUuaW5zdGFsbGF0aW9ucycsXHJcbiAgICAgIGF0dHJpYnV0ZXM6IHsgZXh0ZW5zaW9uOiBleHRlbnNpb25JZCB9LFxyXG4gICAgfSxcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUV4dGVuc2lvbihhcHBJZCwgaW5zdGFsbGF0aW9uSWQsIGV4dGVuc2lvbklkKSB7XHJcbiAgY29uc3QgdXJsID0gYXBwTWFuYWdlclVyaS5jbG9uZSgpLnNlZ21lbnQoYC92MS9hcHBzLyR7YXBwSWR9L2luc3RhbGxhdGlvbnMvJHtpbnN0YWxsYXRpb25JZH1gKTtcclxuICByZXR1cm4gYXdhaXQganNvbkFwaS5wYXRjaCh1cmwsIHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgdHlwZTogJ3Nob3V0ZW0uY29yZS5pbnN0YWxsYXRpb25zJyxcclxuICAgICAgYXR0cmlidXRlczogeyBleHRlbnNpb246IGV4dGVuc2lvbklkIH0sXHJcbiAgICB9LFxyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdW5pbnN0YWxsRXh0ZW5zaW9uKGFwcElkLCBleHRlbnNpb25JZCkge1xyXG4gIGNvbnN0IHVyaSA9IGFwcE1hbmFnZXJVcmkuY2xvbmUoKS5zZWdtZW50KGAvdjEvYXBwcy8ke2FwcElkfS9pbnN0YWxsYXRpb25zLyR7ZXh0ZW5zaW9uSWR9YCk7XHJcbiAgcmV0dXJuIGpzb25BcGkuZGVsKHVyaSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRFeHRJbnN0YWxsYXRpb25zKGFwcElkKSB7XHJcbiAgY29uc3QgdXJpID0gYXBwTWFuYWdlclVyaS5jbG9uZSgpLnNlZ21lbnQoYC92MS9hcHBzLyR7YXBwSWR9L2luc3RhbGxhdGlvbnNgKTtcclxuICByZXR1cm4gYXdhaXQganNvbkFwaS5nZXQodXJpKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUFwcChhcHApIHtcclxuICBjb25zdCB1cmwgPSBhcHBNYW5hZ2VyVXJpLmNsb25lKCkuc2VnbWVudCgnL3YxL2FwcHMvYmFzZS9hY3Rpb25zL2Nsb25lJyk7XHJcbiAgcmV0dXJuIGF3YWl0IGpzb25BcGkucG9zdCh1cmwsIHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgdHlwZTogJ3Nob3V0ZW0uY29yZS5hcHBsaWNhdGlvbi1jbG9uZXMnLFxyXG4gICAgICBhdHRyaWJ1dGVzOiBhcHAsXHJcbiAgICB9LFxyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QXBwbGljYXRpb25QbGF0Zm9ybShhcHBJZCkge1xyXG4gIGNvbnN0IHVybCA9IGFwcE1hbmFnZXJVcmkuY2xvbmUoKS5zZWdtZW50KGAvdjEvYXBwcy8ke2FwcElkfS9wbGF0Zm9ybWApO1xyXG4gIHJldHVybiBhd2FpdCBqc29uQXBpLmdldCh1cmwpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SW5zdGFsbGF0aW9ucyhhcHBJZCkge1xyXG4gIGNvbnN0IHVybCA9IGFwcE1hbmFnZXJVcmkuY2xvbmUoKS5zZWdtZW50KGAvdjEvYXBwcy8ke2FwcElkfS9pbnN0YWxsYXRpb25zYCk7XHJcbiAgcmV0dXJuIGF3YWl0IGpzb25BcGkuZ2V0KHVybCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRJbnN0YWxsYXRpb24oYXBwSWQsIGNhbm9uaWNhbCkge1xyXG4gIGNvbnN0IHVybCA9IGFwcE1hbmFnZXJVcmkuY2xvbmUoKS5zZWdtZW50KGAvdjEvYXBwcy8ke2FwcElkfS9pbnN0YWxsYXRpb25zLyR7Y2Fub25pY2FsfWApO1xyXG4gIHJldHVybiBhd2FpdCBqc29uQXBpLmdldCh1cmwpO1xyXG59XHJcbiJdfQ==